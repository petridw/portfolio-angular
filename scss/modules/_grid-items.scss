@mixin grid-item-columns($columns) {
  width: (100% / 12) * $columns;
}

.grid-items {
  ///////////////////////////////////////////////////////////////////////////////////
  $base-accent-color: #477DCA !default;
  $base-background-color: white !default;
  $medium-screen: em(640) !default;
  $large-screen: em(860) !default;
  
  p {
    line-height: 1.5em;
  }

  a {
    text-decoration: none;
  }
  //////////////////////////////////////////////////////////////////////////////////

  $grid-items-background: $base-background-color;
  $grid-item-background: desaturate($base-accent-color, 30%);
  $grid-item-colors: 
    desaturate($base-accent-color, 30%), 
    #3581A5, 
    #5FBEBE,
    #98C79A,
    #A7A891, 
    #BDCC97,
    #979EA0;
  $grid-item-images:
    "../../img/getcooking/sample.png",
    "../../img/dototime/sample.png",
    "../../img/playerpop/sample.png",
    "../../img/tictactoe/sample.png";
  $grid-item-border-size: 9px;
  $grid-item-columns: 6;
  $grid-item-big-columns: 8;
  $grid-item-color: white;
  $grid-item-height: 15em;

  @include clearfix;
    
  .grid-item {
    @include transition (all 0.4s ease-in-out);
    background: $grid-item-background;
    border-bottom: $grid-item-border-size solid $grid-items-background;
    border-left: ($grid-item-border-size / 2) solid $grid-items-background;
    border-right: ($grid-item-border-size / 2) solid $grid-items-background;
    border-top: 0;
    cursor: pointer;
    float: left;
    height: $grid-item-height;
    overflow: hidden;
    outline: none;
    padding: 2em;
    text-align: center;
    width: 100%;

    @include media($large-screen) {
      @include grid-item-columns($grid-item-columns);
    }

    @for $i from 1 through length($grid-item-colors) { // assign colors from $grid-item-colors list
      &:nth-child(#{$i}) {
        $background-from-list: nth($grid-item-colors, $i);
        background-color: $background-from-list;
        box-shadow: inset 0px 0px 1px 2px tint($background-from-list, 40%);
        border-radius: 2px;

        &:focus,
        &:hover {
          background-color: darken($background-from-list, 10%);
          background-repeat: no-repeat;
          background-position: top;
          background-size: cover;

          h1,
          p,
          img {
            opacity: 1;
          }
        }
      }
    }

    >* {
      @include transition (all 0.3s ease-in-out);
    }
  }

  .grid-item img {
      display: block;
      height: 3em;
      margin-bottom: 1em;
      margin: auto;
      opacity: 0;
      margin-bottom: .7em;
    }

  .grid-item h1 {
      color: $grid-item-color;
      font-size: 1.3em;
      margin-bottom: 0.4em;
      opacity: 0;

    }

  .grid-item p {
      margin: auto;
      color: transparentize($grid-item-color, 0.3);
      opacity: 0;
      
      @include media($medium-screen) {
        max-width: 100%;
      }
    }

  .grid-item-big {
    @include media($large-screen) {
      @include grid-item-columns($grid-item-big-columns);
    }
    p {
      @include media($medium-screen) {
        max-width: 60%;
      }
    }
  }


  .grid-item-image {

    @for $i from 1 through length($grid-item-images) { // assign image backgrounds
      &:nth-child(#{$i}) {
        background: url(nth($grid-item-images, $i));
        background-color: $grid-item-background;
        background-position: top;
        background-repeat: no-repeat;
        background-size: cover;
      }
    }

    &:focus,
    &:hover {
      background: $base-background-color;
    }

  }


}
